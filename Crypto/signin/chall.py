from Crypto.Util.number import getPrime, inverse, GCD, bytes_to_long, long_to_bytes

flag = b"ZFun{i_dont_know_anything_about_RSA}"

assert len(flag) == 36
assert flag.startswith(b"ZFun{")
assert flag.endswith(b"}")

p,q = getPrime(256), getPrime(256)
n = p*q
e = 65537
m = bytes_to_long(flag)
c = pow(m,e,n)

print(f"# n = {n}\n# c = {c}")

# n = 10394321023144488346542992032155806806414680909684392975928580892496643435445514955693895484420645749446606678782710915422663601938326865106010474999717779
# c = 6006340278470698080420389403435089961276841055382726375740665082270943510759808217204232813782695963301313497214683115741729078623773424136787230353252712
